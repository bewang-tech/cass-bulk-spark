buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "http://dl.bintray.com/ramonza/gradle-plugins"
        }
        jcenter()
    }
    dependencies {
        classpath "org.ajoberstar:grgit:1.3.0"
        classpath "com.rhapsody.bi:gradle-bi-plugin:0.0.1"
        classpath "cucumber.contrib.gradle:cucumber-gradle:0.2.0"
        classpath "com.github.maiflai:gradle-scalatest:0.12"
    }
}

plugins {
    id "scala"
    id "maven-publish"
    id "nebula.provided-base" version "3.0.3"
}

apply plugin: "cucumber"
apply plugin: "com.github.maiflai.scalatest"

sourceCompatibility = 1.7
targetCompatibility = 1.7

def scalaMajor = "2.10"
def scalaVersion = "2.10.4"

configurations {
    scripts
}

ext {
    git = org.ajoberstar.grgit.Grgit.open(currentDir: project.projectDir)
    revision = git.head().id
    gitVersion = git.describe().replaceFirst(/^(?i)v/, "")
    testWorkingDir = new File(buildDir, "test-tmp")
    hadoopVersion = "2.5.0-cdh5.3.2"
}

group = "com.rhapsody.bi"
version = gitVersion
description = "Spark SQL App"

jar {
    manifest {
        attributes "Implementation-Title": description,
                "Implementation-Version": revision
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repository.cloudera.com/artifactory/cloudera-repos/" }
    maven { url "http://maven01.internal.rhapsody.com/nexus/content/groups/public" }
    maven { url "http://rds-repo-dev-1201.sea2.rhapsody.com:8080/nexus/content/groups/public" }
    maven { url "http://rds-repo-dev-1201.sea2.rhapsody.com:8080/nexus/content/groups/public-snapshots" }
}

dependencies {
    compile "org.apache.cassandra:cassandra-all:2.1.9"
    compile "com.datastax.spark:spark-cassandra-connector_$scalaMajor:rhap1.6.0"

    provided "org.apache.spark:spark-hive_$scalaMajor:rhap1.6.0"

    testCompile "com.rhapsody.bi:sparktest-helper:0.0.1+"

    testRuntime "org.pegdown:pegdown:1.1.0"

    testCompile "org.scalacheck:scalacheck_$scalaMajor:1.12.5"

    testCompile "info.cukes:cucumber-scala_$scalaMajor:1.2.4"
    testCompile "info.cukes:cucumber-junit:1.2.4"
}

test.doFirst {
    testWorkingDir.mkdirs()
}

test {
    systemProperties "property": "value"
    maxParallelForks = 1
    workingDir testWorkingDir
}

task scalaDocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'scaladoc'
    from scaladoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) { gradleVersion = "2.12" }

publishing {
    repositories {
        maven {
            name "rhapsody"
            url "http://maven01.internal.rhapsody.com/nexus/content/repositories/releases"
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(scalaDocJar) {
                classifier = 'scaladoc'
            }
            artifact(sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}
